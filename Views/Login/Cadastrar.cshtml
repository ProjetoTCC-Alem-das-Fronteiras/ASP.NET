@model AspViagens.Models.Cadastro
@{
    ViewBag.Title = "Cadastrar";
}
<link href="~/Styles/reset.css" rel="stylesheet" />


@using (Html.BeginForm("CadastrarUsuario", "Login", FormMethod.Post))
{
    @Html.AntiForgeryToken()

<div class="form-horizontal container center">
    <h2 style="margin: 1rem;">Cadastrar</h2>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

    @if (TempData["Mensagem Erro Cadastro CPF"] != null)
    {
        <div class="alert alert-danger" role="alert">
            <button type="button" class="btn btn-danger btn-sm close-alert" data-bs-dismiss="alert" aria-label="Close">X</button>
            @TempData["Mensagem Erro Cadastro CPF"]
        </div>
    }
    @if (TempData["Mensagem Erro Cadastro Email"] != null)
    {
        <div class="alert alert-danger" role="alert">
            <button type="button" class="btn btn-danger btn-sm close-alert" data-bs-dismiss="alert" aria-label="Close">X</button>
            @TempData["Mensagem Erro Cadastro Email"]
        </div>
    }
    @if (TempData["Mensagem Erro Cadastro CPF Email"] != null)
    {
        <div class="alert alert-danger" role="alert">
            <button type="button" class="btn btn-danger btn-sm close-alert" data-bs-dismiss="alert" aria-label="Close">X</button>
            @TempData["Mensagem Erro Cadastro CPF Email"]
        </div>
    }
    @if (TempData["Mensagem Erro Cadastro Login"] != null)
    {
        <div class="alert alert-danger" role="alert">
            <button type="button" class="btn btn-danger btn-sm close-alert" data-bs-dismiss="alert" aria-label="Close">X</button>
            @TempData["Mensagem Erro Cadastro Login"]
        </div>
    }
    <div class="d-flex">
        <br />

        <div class="col-md-10">
            @Html.EditorFor(model => model.nm, new { htmlAttributes = new { @class = "form-control input", placeholder = "Digite seu nome" } })
            @Html.ValidationMessageFor(model => model.nm, "", new { @class = "text-danger " })
        </div>
    </div>
    <div class="form-group">
        <br />
        <div class="col-md-10">
            @Html.EditorFor(model => model.dsEmail, new { htmlAttributes = new { @class = "form-control input", placeholder = "Digite seu email" } })
            @Html.ValidationMessageFor(model => model.dsEmail, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <br />
        <div class="col-md-10">
            @Html.EditorFor(model => model.dsSenha, new { htmlAttributes = new { @class = "form-control input", placeholder = "Digite sua senha", type = "password" } })
            @Html.ValidationMessageFor(model => model.dsSenha, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <br />
        <div class="col-md-10">
            @Html.EditorFor(model => model.ConfirmaSenha, new { htmlAttributes = new { @class = "form-control input", placeholder = "Confirme sua senha", type = "password" } })
            @Html.ValidationMessageFor(model => model.ConfirmaSenha, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <br />
        <div class="col-md-10">
            @Html.EditorFor(model => model.noCPF, new { htmlAttributes = new { @class = "form-control input", placeholder = "Digite o CPF" } })
            @Html.ValidationMessageFor(model => model.noCPF, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <br />
        <div class="col-md-10">
            @Html.EditorFor(model => model.dsLogin, new { htmlAttributes = new { @class = "form-control input", placeholder = "Digite o login" } })
            @Html.ValidationMessageFor(model => model.dsLogin, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <br />
        <div class="col-md-10">
            @Html.EditorFor(model => model.Telefone, new { htmlAttributes = new { @class = "form-control input", placeholder = "Digite o Telefone" } })
            @Html.ValidationMessageFor(model => model.Telefone, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Finalizar Cadastro" class="btn-dark-blue " style="margin: 1rem;" />
        </div>
    </div>
</div>
}
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}

